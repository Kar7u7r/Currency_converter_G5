package model;

import java.util.HashMap;

public class Measurement extends Menu {
	private double result;
	private String val = null;
	private String val2 = null;
	private String[] cm = { "CM to Mt", "CM to Km", "CM to Dm", "CM to Inch", "CM to Foot", "Mm to CM" };
	private String[] to = { "Mt to CM", "Km to CM", "Dm to CM", "Inch to Cm", "Foot to CM", "CM to Mm" };

	double[] Data = { 100.0, 100000.0, 10.0, 10.0, 2.54, 30.48, 100.0, 100000.0, 10.0, 10.0, 2.54, 30.48 };
	String[] FS1 = { "CM", "CM", "CM", "CM", "CM", "CM", "Mt", "Km", "Dm", "Mm", "Inch", "Foot" };
	String[] FS2 = { "Mt", "Km", "Dm", "Mm", "Inch", "Foot", "CM", "CM", "CM", "CM", "CM", "CM" };

	// Constructor y métodos getter y setter aquí

	// Ejemplo de constructor
	public void ValueContainer(double[] value1, String[] value2, String[] value3) {
	        this.Data = value1;
	        this.FS1 = value2;
	        this.FS2 = value3;
	    }

	public void MeasurementMenu(double DoubleValue) {

		MenuMeasurement();

		String[] Metrics = { "CM to Mt", "CM to Km", "CM to Dm", "CM to Mm", "CM to Inch", "CM to Foot", "Mt to CM",
				"Km to CM", "Dm to CM", "Mm to CM", "Inch to Cm", "Foot to CM" };

		HashMap<String, Double> Metric = new HashMap<>();
		// double tiemmpo = System.nanoTime();
		int i = 0;
		for (var metric : Metrics)
			Metric.put(metric, Data[i++]);

		String Option = getMenuMeasurement();
		double value = Metric.get(Option);

		for (int x = 0, y = 0; x < cm.length; x++, y++) {
			val = cm[x];
			val2 = to[y];
			if (val == Option)
				// division
				result = DoubleValue / value;
			else if (val2 == Option)
				// multi
				result = DoubleValue * value;
		}
	}

	public double getMeasurementMenuValue() {
		// TODO Auto-generated method stub
		return result;
	}
}
